{"mappings":"AAEeA,OAAOC,SAASC,cAAc,WAA7C,MACMC,EAASH,OAAOC,SAASG,iBAAiB,0BAE1CC,EAAYL,OAAOC,SAASC,cAAc,wBAC1CI,EAAYN,OAAOC,SAASC,cAAc,wBAE1CK,EAAkB,CACtB,8BACA,8BACA,+BAGIC,EAAYL,EAAOM,OACzB,IAGIC,EAHAC,EAAY,EACZC,EAAY,EACZC,EAAY,EAEhB,MAEMC,EAAoBC,GACpBA,IAAaP,EAAkB,EAC/BO,EAAW,EAAUP,EAAY,EAC9BO,EASHC,EAAaD,IALjBZ,EAAOQ,GAAWM,UAAUC,UAAUX,GACtCJ,EAAOS,GAAWK,UAAUC,UAAUX,GACtCJ,EAAOU,GAAWI,UAAUC,UAAUX,GAKtCI,EAAYG,EAAiBC,EAAW,GACxCH,EAAYG,EACZF,EAAYC,EAAiBC,EAAW,GAExCZ,EAAOQ,GAAWM,UAAUE,IAAI,+BAChChB,EAAOS,GAAWK,UAAUE,IAAI,+BAChChB,EAAOU,GAAWI,UAAUE,IAAI,gCAG5BC,EAAQ,IAASJ,EAAUF,EAAiBF,EAAY,IAI9DN,EAAUe,iBAAiB,SAFb,IAASL,EAAUF,EAAiBF,EAAY,MAG9DP,EAAUgB,iBAAiB,QAASD,GAalCJ,EAAU,GAXaN,EAAUV,OAAOsB,YAAYF,EAhChC,KCdtB,MAAMG,EAAUtB,SAASC,cAAc,aACjCsB,EAAaxB,OAAOC,SAASC,cAAc,gBAC3CuB,EAAQzB,OAAOC,SAASG,iBAAiB,KACzCsB,EAAa1B,OAAOC,SAASC,cAAc,gBACjD,IAAIyB,EAAmBH,EAAWI,wBAAwBC,OAC1D,MAAMC,EAAsB9B,OAAOC,SAASG,iBAAiB,iBACvD2B,EAAiB/B,OAAOC,SAASC,cAAc,sBAIrDwB,EAAWL,iBAAiB,SAAO,KACjCG,EAAWP,UAAUe,OAAO,QAC5BhC,OAAOiC,YAAU,KACfP,EAAWQ,SACV,QAKLT,EAAMU,SAASC,IACbA,EAAKf,iBAAiB,SAAUgB,IAC9B,MAAMC,EAAOF,EAAKG,aAAa,QAI/B,GAFAZ,EAAmBH,EAAWI,wBAAwBC,OAEzC,MAATS,EAEFD,EAAEG,iBACFxC,OAAOyC,SAAS,CAAEC,IAAK,EAAGC,SAAU,gBAC/B,GAAoB,IAAhBL,EAAKM,QAAgBN,EAAKO,WAAW,KAAM,CAEpDR,EAAEG,iBACF,MAAMM,EAAY7C,SAASC,cAAcoC,GAGzCtC,OAAOyC,SAAS,CACdC,IAAG,IAAKI,EAAUC,UAAYpB,GAC9BgB,SAAU,WAOd3C,OAAOiC,YAAU,KACfG,EAAKF,SACJ,KAGCV,EAAWP,UAAU+B,SAAS,SAChCxB,EAAWP,UAAUC,OAAO,cAOlC,MAAM+B,GAAc,IAAIC,MAAOC,cAC/BrB,EAAoBK,SAASiB,IAC3BA,EAAIC,YAAcJ,KAKpBlB,EAAeV,iBAAiB,SAAO,KACrCrB,OAAOyC,SAAS,CAAEC,IAAK,EAAGC,SAAU,WACpC3C,OAAOiC,YAAU,KACfF,EAAeG,SACd,QAIO,IAAIoB,sBACbC,IACC,MAAMC,EAAMD,EAAQ,GACpB5B,EAAmBH,EAAWI,wBAAwBC,QAE3B,IAAvB2B,EAAIC,gBACNjC,EAAWP,UAAUE,IAAI,UACzBY,EAAed,UAAUE,IAAI,UAE7BK,EAAWP,UAAUC,OAAO,UAC5Ba,EAAed,UAAUC,OAAO,WAGpC,CAEEwC,KAAM,KACNC,UAAW,EACXC,WAAU,IAAyB,IAAnBjC,SAGhBkC,QAAQtC","sources":["content/js/slider.js","content/js/main.js"],"sourcesContent":["/* eslint-disable no-return-assign */\r\n/* eslint-disable no-multi-assign */\r\nconst slider = window.document.querySelector('.slider');\r\nconst slides = window.document.querySelectorAll('.slider__slides__slide');\r\n\r\nconst arrowNext = window.document.querySelector('.slider__arrow--next');\r\nconst arrowPrev = window.document.querySelector('.slider__arrow--prev');\r\n\r\nconst classesToRemove = [\r\n  'slider__slides__slide--prev',\r\n  'slider__slides__slide--curr',\r\n  'slider__slides__slide--next',\r\n];\r\n\r\nconst slidesNum = slides.length;\r\nlet prevSlide = 0;\r\nlet currSlide = 1;\r\nlet nextSlide = 2;\r\nlet timerID;\r\nconst TIMER__PERIOD = 6000;\r\n\r\nconst slideNumberCheck = (slideNum) => {\r\n  if (slideNum === slidesNum) return 0;\r\n  if (slideNum < 0) return slidesNum - 1;\r\n  return slideNum;\r\n};\r\n\r\nconst resetClasses = () => {\r\n  slides[prevSlide].classList.remove(...classesToRemove);\r\n  slides[currSlide].classList.remove(...classesToRemove);\r\n  slides[nextSlide].classList.remove(...classesToRemove);\r\n};\r\n\r\nconst gotoSlide = (slideNum) => {\r\n  resetClasses();\r\n  prevSlide = slideNumberCheck(slideNum - 1);\r\n  currSlide = slideNum;\r\n  nextSlide = slideNumberCheck(slideNum + 1);\r\n\r\n  slides[prevSlide].classList.add('slider__slides__slide--prev');\r\n  slides[currSlide].classList.add('slider__slides__slide--curr');\r\n  slides[nextSlide].classList.add('slider__slides__slide--next');\r\n};\r\n\r\nconst goToNext = () => gotoSlide(slideNumberCheck(currSlide + 1));\r\n\r\nconst goToPrev = () => gotoSlide(slideNumberCheck(currSlide - 1));\r\n\r\narrowPrev.addEventListener('click', goToPrev);\r\narrowNext.addEventListener('click', goToNext);\r\n\r\nconst autoSlide = () => (timerID = window.setInterval(goToNext, TIMER__PERIOD));\r\n\r\n// const pauseAutoSlide = () => {\r\n//   window.clearInterval(timerID);\r\n//   console.log('S1');\r\n// };\r\n\r\n// slider.addEventListener('mouseover', pauseAutoSlide);\r\n// slider.addEventListener('mouseout', autoSlide);\r\n\r\nexport const sliderInit = () => {\r\n  gotoSlide(0);\r\n  autoSlide();\r\n};\r\n\r\n// const gotoSlide = (slideNum) => {\r\n// \treset()\r\n\r\n// \tprevSlide = slideNumberCheck(slideNum - 1)\r\n// \tcurrSlide = slideNum\r\n// \tnextSlide = slideNumberCheck(slideNum + 1)\r\n\r\n// \tslides[prevSlide].classList.add('slider__slides__slide--prev')\r\n// \tslides[currSlide].classList.add('slider__slides__slide--curr')\r\n// \tslides[nextSlide].classList.add('slider__slides__slide--next')\r\n// }\r\n\r\n// const goToNext = () => gotoSlide(slideNumberCheck(currSlide + 1))\r\n// const goToPrev = () => gotoSlide(slideNumberCheck(currSlide - 1))\r\n\r\n// arrowPrev.addEventListener('click', goToPrev)\r\n// arrowNext.addEventListener('click', goToNext)\r\n\r\n// export const sliderInit = () => gotoSlide(0)\r\n\r\n/** ********** */\r\n\r\n// const slides = window.document.querySelectorAll('.slider__slides__slide')\r\n\r\n// const arrowNext = window.document.querySelector('.slider__arrow--next')\r\n// const arrowPrev = window.document.querySelector('.slider__arrow--prev')\r\n\r\n// const slidesNum = slides.length\r\n// let prevSlide = 1\r\n// let currSlide = 2\r\n// let nextSlide = 3\r\n\r\n// const slideNumberCheck = (slideNum) => {\r\n// \tif (slideNum === slidesNum) return 0\r\n// \tif (slideNum < 0) return slidesNum - 1\r\n// \treturn slideNum\r\n// }\r\n\r\n// console.log(slides[prevSlide].className)\r\n// console.log(slides[currSlide].className)\r\n// console.log(slides[nextSlide].className)\r\n\r\n// const reset = () => {\r\n// \tslides[prevSlide].className = 'slider__slides__slide'\r\n// \tslides[currSlide].className = 'slider__slides__slide'\r\n// \tslides[nextSlide].className = 'slider__slides__slide'\r\n// }\r\n\r\n// const gotoSlide = (slideNum) => {\r\n// \treset()\r\n\r\n// \tprevSlide = slideNumberCheck(slideNum - 1)\r\n// \tcurrSlide = slideNum\r\n// \tnextSlide = slideNumberCheck(slideNum + 1)\r\n\r\n// \tslides[prevSlide].classList.add('slider__slides__slide--prev')\r\n// \tslides[currSlide].classList.add('slider__slides__slide--curr')\r\n// \tslides[nextSlide].classList.add('slider__slides__slide--next')\r\n// }\r\n\r\n// const goToNext = () => {\r\n// \tslides[prevSlide].className =\r\n// \t\t'slider__slides__slide slider__slides__slide--curr'\r\n\r\n// \tslides[currSlide].className =\r\n// \t\t'slider__slides__slide slider__slides__slide--next'\r\n\r\n// \tprevSlide = currSlide\r\n// \tcurrSlide = nextSlide\r\n// \tnextSlide = slideNumberCheck(slideNum + 1)\r\n\r\n// \tslides[nextSlide].className =\r\n// \t\t'slider__slides__slide slider__slides__slide--next'\r\n\r\n// \tgotoSlide(slideNumberCheck(currSlide + 1))\r\n// }\r\n\r\n// const goToPrev = () => gotoSlide(slideNumberCheck(currSlide - 1))\r\n\r\n// arrowPrev.addEventListener('click', goToPrev)\r\n// arrowNext.addEventListener('click', goToNext)\r\n\r\n// export const sliderInit = () => gotoSlide(0)\r\n","import { sliderInit } from './slider';\r\n\r\nsliderInit();\r\n\r\n// #region cache the needed dom Elements.\r\nconst heroSec = document.querySelector('.sec-hero');\r\nconst mainHeader = window.document.querySelector('.header-main');\r\nconst links = window.document.querySelectorAll('a');\r\nconst togglerBtn = window.document.querySelector('.toggler-btn');\r\nlet mainHeaderHeight = mainHeader.getBoundingClientRect().height;\r\nconst currentYearElements = window.document.querySelectorAll('.current-year');\r\nconst scrollToTopBtn = window.document.querySelector('.scroll-to-top-btn');\r\n// #endregion\r\n\r\n// #region  navbar toggler buttom functionality\r\ntogglerBtn.addEventListener('click', () => {\r\n  mainHeader.classList.toggle('open');\r\n  window.setTimeout(() => {\r\n    togglerBtn.blur();\r\n  }, 1000);\r\n});\r\n// #endregion\r\n\r\n// #region handle smooth scrolling in internal navigation\r\nlinks.forEach((link) => {\r\n  link.addEventListener('click', (e) => {\r\n    const href = link.getAttribute('href');\r\n\r\n    mainHeaderHeight = mainHeader.getBoundingClientRect().height;\r\n\r\n    if (href === '#') {\r\n      // Scroll back to top\r\n      e.preventDefault();\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    } else if (href.lenght !== 1 && href.startsWith('#')) {\r\n      // Scroll to other internal section\r\n      e.preventDefault();\r\n      const sectionEl = document.querySelector(href);\r\n\r\n      // sectionEl.scrollIntoView({ behavior: 'smooth' });\r\n      window.scrollTo({\r\n        top: `${sectionEl.offsetTop - mainHeaderHeight}`,\r\n        behavior: 'smooth',\r\n      });\r\n    } else {\r\n      // Scroll to others target\r\n      // do normall behavior\r\n    }\r\n\r\n    window.setTimeout(() => {\r\n      link.blur();\r\n    }, 1000);\r\n\r\n    // Close nav Linst Layer in case small screen\r\n    if (mainHeader.classList.contains('open')) {\r\n      mainHeader.classList.remove('open');\r\n    }\r\n  });\r\n});\r\n// #endregion\r\n\r\n// #region  Update Current year functionality\r\nconst currentYear = new Date().getFullYear();\r\ncurrentYearElements.forEach((ele) => {\r\n  ele.textContent = currentYear;\r\n});\r\n// #endregion\r\n\r\n// #region handle scroll to top button functionality\r\nscrollToTopBtn.addEventListener('click', () => {\r\n  window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  window.setTimeout(() => {\r\n    scrollToTopBtn.blur();\r\n  }, 1000);\r\n});\r\n\r\n//  show & hidden  scroll to top button Using : Intersection Observer API\r\nconst obs = new IntersectionObserver(\r\n  (entries) => {\r\n    const ent = entries[0];\r\n    mainHeaderHeight = mainHeader.getBoundingClientRect().height;\r\n\r\n    if (ent.isIntersecting === false) {\r\n      mainHeader.classList.add('sticky');\r\n      scrollToTopBtn.classList.add('show');\r\n    } else {\r\n      mainHeader.classList.remove('sticky');\r\n      scrollToTopBtn.classList.remove('show');\r\n    }\r\n  },\r\n  {\r\n    // In the viewport\r\n    root: null,\r\n    threshold: 0,\r\n    rootMargin: `-${mainHeaderHeight * 1.5}px `,\r\n  }\r\n);\r\nobs.observe(heroSec);\r\n// #endregion\r\n"],"names":["window","document","querySelector","$a00ea5662ea6460b$var$slides","querySelectorAll","$a00ea5662ea6460b$var$arrowNext","$a00ea5662ea6460b$var$arrowPrev","$a00ea5662ea6460b$var$classesToRemove","$a00ea5662ea6460b$var$slidesNum","length","$a00ea5662ea6460b$var$timerID","$a00ea5662ea6460b$var$prevSlide","$a00ea5662ea6460b$var$currSlide","$a00ea5662ea6460b$var$nextSlide","$a00ea5662ea6460b$var$slideNumberCheck","slideNum","$a00ea5662ea6460b$var$gotoSlide","classList","remove","add","$a00ea5662ea6460b$var$goToNext","addEventListener","setInterval","$b9da9b148eef1de2$var$heroSec","$b9da9b148eef1de2$var$mainHeader","$b9da9b148eef1de2$var$links","$b9da9b148eef1de2$var$togglerBtn","$b9da9b148eef1de2$var$mainHeaderHeight","getBoundingClientRect","height","$b9da9b148eef1de2$var$currentYearElements","$b9da9b148eef1de2$var$scrollToTopBtn","toggle","setTimeout","blur","forEach","link","e","href","getAttribute","preventDefault","scrollTo","top","behavior","lenght","startsWith","sectionEl","offsetTop","contains","$b9da9b148eef1de2$var$currentYear","Date","getFullYear","ele","textContent","IntersectionObserver","entries","ent","isIntersecting","root","threshold","rootMargin","observe"],"version":3,"file":"index.22e539a7.js.map"}